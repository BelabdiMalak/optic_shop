generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String     @id @default(uuid())
  name            String
  surename        String
  sphere          String?
  cylinder        String?

  // metadata
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  isDeleted       Boolean?   @default(false)
  
  // relations
  orders          Order[]
}

model Type {
  id              String     @id @default(uuid())
  name            String     @unique

  // metadata
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  // relations
  subTypes        SubType[]
  products        Product[]
}

model SubType {
  id              String     @id @default(uuid())
  name            String     @unique

  // metadata
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  
  // relations
  typeId          String    
  type            Type      @relation(fields: [typeId], references: [id])
  products        Product[]
}

model Stock {
  id              String     @id @default(uuid())
  date            DateTime   @default(now())
  type            String
  quantity        Int

  // metadata
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  
  // relations
  productId       String
  product         Product       @relation(fields: [productId], references: [id])

  detailsId       String?
  details         ProductDetail? @relation(fields: [detailsId], references: [id])
}

model Product {
  id              String     @id @default(uuid())
  stockQuantity   Int        @default(0)

  // metadata
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  
  // relations
  typeId          String
  type            Type       @relation(fields: [typeId], references: [id])

  subTypeId       String
  subType         SubType    @relation(fields: [subTypeId], references: [id])

  order           Order[]
  stocks          Stock[]
  details         ProductDetail[]
  
  @@unique([typeId, subTypeId])
}

model Order {
  id              String     @id @default(uuid())
  date            DateTime   @default(now())
  deposit         Int        @default(0)
  status          String
  framePrice      Int?       @default(0)
  productPrice    Int?       @default(0)

  // metadata
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  
  // relations
  userId          String
  user            User        @relation(fields: [userId], references: [id])

  productId       String
  product         Product     @relation(fields: [productId], references: [id])

  detailsId       String?
  details         ProductDetail? @relation(fields: [detailsId], references: [id])
}

model ProductDetail {
  id              String     @id @default(uuid())
  sphere          String?    // defalt 0???
  cylinder        String?
  quantity        Int        @default(0)
  category        String    // torique || spherique

  // metadata
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  // relations
  productId       String
  product         Product     @relation(fields: [productId], references: [id])
  orders          Order[]
  stocks          Stock[]

  @@unique([productId, sphere, cylinder, category])
}